{"ast":null,"code":"import { ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { NavigationEnum } from 'src/app/model/enums/navigation.enum';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./auth.service\";\nimport * as i2 from \"../commons/common.service\";\nexport let AuthGuard = /*#__PURE__*/(() => {\n  class AuthGuard {\n    constructor(authService, commomService) {\n      this.authService = authService;\n      this.commomService = commomService;\n    }\n    canActivate(route, state) {\n      let possuiPermissao = false;\n      if (route.data.roles) {\n        if (this.veriricaLogin()) {\n          possuiPermissao = this.verificaPermissao(route.data.roles);\n          if (!possuiPermissao) {\n            this.commomService.navigate(NavigationEnum.DASHBOARD);\n          }\n        } else {\n          this.commomService.navigate(NavigationEnum.LOGIN);\n        }\n      }\n      return possuiPermissao;\n    }\n    veriricaLogin() {\n      return this.authService.jwtIsLoad();\n    }\n    verificaPermissao(roles) {\n      return this.authService.possuiPermissaoAcesso(roles);\n    }\n  }\n  AuthGuard.ɵfac = function AuthGuard_Factory(t) {\n    return new (t || AuthGuard)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.CommomService));\n  };\n  AuthGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthGuard,\n    factory: AuthGuard.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthGuard;\n})();","map":null,"metadata":{},"sourceType":"module"}