{"ast":null,"code":"import { MessageService } from 'primeng/api';\nimport { NavigationEnum } from 'src/app/model/enums/navigation.enum';\nimport { Tenancy } from 'src/app/model/vo/tenancy';\nimport { Usuario } from 'src/app/model/vo/usuario';\nimport MessageUtils from 'src/app/utils/message-util';\nimport { DialogService } from 'primeng/dynamicdialog';\nimport { AceiteOcorrenciasComponent } from '../aceite/aceite-ocorrencias.component';\nimport { NotAuthenticatedError } from 'src/app/interceptors/auth.http.interceptor';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"primeng/api\";\nimport * as i2 from \"src/app/services/commons/common.service\";\nimport * as i3 from \"src/app/services/combos/combo.service\";\nimport * as i4 from \"src/app/services/ocorrencias/ocorrencia-service\";\nimport * as i5 from \"src/app/services/auth/auth.service\";\nimport * as i6 from \"primeng/dynamicdialog\";\nimport * as i7 from \"src/app/services/prestadores/prestador-service\";\nimport * as i8 from \"primeng/button\";\nimport * as i9 from \"@angular/common\";\nimport * as i10 from \"primeng/toast\";\nimport * as i11 from \"@angular/forms\";\nimport * as i12 from \"primeng/inputtext\";\nimport * as i13 from \"primeng/inputtextarea\";\nimport * as i14 from \"primeng/dropdown\";\nimport * as i15 from \"primeng/table\";\nimport * as i16 from \"primeng/multiselect\";\nfunction NovaOcorrenciaComponent_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 28)(1, \"h5\", 29);\n    i0.ɵɵtext(2, \"Cadastro de ocorr\\u00EAncia\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction NovaOcorrenciaComponent_small_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 30);\n    i0.ɵɵtext(1, \"* A Latitude e Longitude \\u00E9 obrigat\\u00F3rio.\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport let NovaOcorrenciaComponent = /*#__PURE__*/(() => {\n  class NovaOcorrenciaComponent {\n    constructor(messageService, commomService, comboService, ocorrenciaService, authService, dialogService, prestadorService) {\n      this.messageService = messageService;\n      this.commomService = commomService;\n      this.comboService = comboService;\n      this.ocorrenciaService = ocorrenciaService;\n      this.authService = authService;\n      this.dialogService = dialogService;\n      this.prestadorService = prestadorService;\n      this.ocorrencia = {};\n      this.ocorrencias = [];\n      this.itens = [{}];\n      this.usuarioLogado = new Usuario();\n      this.estados = [{\n        \"nome\": \"Acre\",\n        \"sigla\": \"AC\"\n      }, {\n        \"nome\": \"Alagoas\",\n        \"sigla\": \"AL\"\n      }, {\n        \"nome\": \"Amapá\",\n        \"sigla\": \"AP\"\n      }, {\n        \"nome\": \"Amazonas\",\n        \"sigla\": \"AM\"\n      }, {\n        \"nome\": \"Bahia\",\n        \"sigla\": \"BA\"\n      }, {\n        \"nome\": \"Ceará\",\n        \"sigla\": \"CE\"\n      }, {\n        \"nome\": \"Distrito Federal\",\n        \"sigla\": \"DF\"\n      }, {\n        \"nome\": \"Espírito Santo\",\n        \"sigla\": \"ES\"\n      }, {\n        \"nome\": \"Goiás\",\n        \"sigla\": \"GO\"\n      }, {\n        \"nome\": \"Maranhão\",\n        \"sigla\": \"MA\"\n      }, {\n        \"nome\": \"Mato Grosso\",\n        \"sigla\": \"MT\"\n      }, {\n        \"nome\": \"Mato Grosso do Sul\",\n        \"sigla\": \"MS\"\n      }, {\n        \"nome\": \"Minas Gerais\",\n        \"sigla\": \"MG\"\n      }, {\n        \"nome\": \"Pará\",\n        \"sigla\": \"PA\"\n      }, {\n        \"nome\": \"Paraíba\",\n        \"sigla\": \"PB\"\n      }, {\n        \"nome\": \"Paraná\",\n        \"sigla\": \"PR\"\n      }, {\n        \"nome\": \"Pernambuco\",\n        \"sigla\": \"PE\"\n      }, {\n        \"nome\": \"Piauí\",\n        \"sigla\": \"PI\"\n      }, {\n        \"nome\": \"Rio de Janeiro\",\n        \"sigla\": \"RJ\"\n      }, {\n        \"nome\": \"Rio Grande do Norte\",\n        \"sigla\": \"RN\"\n      }, {\n        \"nome\": \"Rio Grande do Sul\",\n        \"sigla\": \"RS\"\n      }, {\n        \"nome\": \"Rondônia\",\n        \"sigla\": \"RO\"\n      }, {\n        \"nome\": \"Roraima\",\n        \"sigla\": \"RR\"\n      }, {\n        \"nome\": \"Santa Catarina\",\n        \"sigla\": \"SC\"\n      }, {\n        \"nome\": \"São Paulo\",\n        \"sigla\": \"SP\"\n      }, {\n        \"nome\": \"Sergipe\",\n        \"sigla\": \"SE\"\n      }, {\n        \"nome\": \"Tocantins\",\n        \"sigla\": \"TO\"\n      }];\n    }\n    ngOnInit() {\n      this.carregarCombos();\n      if (this.authService.jwtIsLoad()) {\n        this.loadUsuarioLogado();\n        this.carregarPrestadores();\n      }\n    }\n    salvar(form) {\n      this.ocorrencia = this.parseData(form);\n      this.adicionarOcorrencia(form);\n    }\n    carregarPrestadores() {\n      this.prestadorService.read().then(data => {\n        this.prestadores = data;\n      }).catch(error => {\n        console.error(error);\n        if (error.includes('404')) {\n          this.messageService.add(MessageUtils.onErrorMessage(\"Erro ao carregar prestadores\"));\n        }\n        if (error instanceof NotAuthenticatedError) {\n          this.messageService.add(MessageUtils.onErrorMessage(\"Sua Sessão Expirou, faça Login Novamente\"));\n          this.commomService.navigate(NavigationEnum.LOGIN);\n        }\n        this.messageService.add(MessageUtils.onErrorMessage(error));\n      });\n    }\n    adicionarOcorrencia(form) {\n      this.ocorrenciaService.create(this.ocorrencia).subscribe(data => {\n        console.log(data);\n        this.id = data.id;\n        console.log(this.id);\n        this.messageService.add(MessageUtils.onSuccessMessage(\"Ocorrencia cadastrada, buscando prestador\"));\n      }, error => {\n        this.messageService.add(MessageUtils.onErrorMessage(error));\n      }, () => {\n        this.show(form.value.estado);\n        this.limpar(form);\n        //this.commomService.navigate(NavigationEnum.LISTAR_OCORRENCIAS);   \n      });\n    }\n\n    parseData(form) {\n      let ocorrencia = {};\n      let localizacao = {};\n      let loc = form.value.localizacao.split(',');\n      let latitude = loc[0];\n      let longitude = loc[1];\n      localizacao.latitude = latitude.replace(/ /g, \"\");\n      localizacao.longitude = longitude.replace(/ /g, \"\");\n      ocorrencia.tenancyCliente = this.usuarioLogado.tenancy;\n      ocorrencia.prestadoresSelecionados = this.prestadoresSelect;\n      ocorrencia.estados = form.value.estado;\n      ocorrencia.localizacao = localizacao;\n      ocorrencia.observacoes = form.value.observacoes;\n      ocorrencia.numeroProcesso = form.value.numProcesso;\n      ocorrencia.motivo = form.value.motivo;\n      ocorrencia.antenista = form.value.antenista == 1 ? true : false;\n      ocorrencia.escoltaArmado = form.value.escoltaArmado == 1 ? true : false;\n      ocorrencia.reguladorSinis = false;\n      return ocorrencia;\n    }\n    limpar(form) {\n      form.resetForm();\n    }\n    carregarCombos() {\n      this.itens = this.comboService.getSimNaoOptions();\n    }\n    loadUsuarioLogado() {\n      if (this.authService.jwtIsLoad()) {\n        let idTenancy = this.authService.getUsuarioLogado().id_tenancy;\n        this.usuarioLogado.id = this.authService.getUsuarioLogado().id_usuario;\n        this.usuarioLogado.tenancy = new Tenancy(idTenancy);\n      }\n    }\n    show(estado) {\n      console.log(\"prestadoresSelect -\", this.prestadoresSelect);\n      console.log(\"estadoSelecionado - \", estado);\n      const ref = this.dialogService.open(AceiteOcorrenciasComponent, {\n        data: {\n          idOcorrencia: this.id,\n          prestadores: this.prestadoresSelect !== undefined ? this.prestadoresSelect : null,\n          estados: estado != null && estado.nome !== undefined ? estado : null\n        },\n        header: 'Lista de Prestadores proximos',\n        width: '70%'\n      });\n    }\n    prestadoresChange(event) {\n      this.prestadoresSelect = event.value;\n    }\n  }\n  NovaOcorrenciaComponent.ɵfac = function NovaOcorrenciaComponent_Factory(t) {\n    return new (t || NovaOcorrenciaComponent)(i0.ɵɵdirectiveInject(i1.MessageService), i0.ɵɵdirectiveInject(i2.CommomService), i0.ɵɵdirectiveInject(i3.ComboService), i0.ɵɵdirectiveInject(i4.OcorrenciaService), i0.ɵɵdirectiveInject(i5.AuthService), i0.ɵɵdirectiveInject(i6.DialogService), i0.ɵɵdirectiveInject(i7.PrestadorService));\n  };\n  NovaOcorrenciaComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: NovaOcorrenciaComponent,\n    selectors: [[\"app-nova-ocorrencia\"]],\n    features: [i0.ɵɵProvidersFeature([MessageService, DialogService])],\n    decls: 49,\n    vars: 8,\n    consts: [[1, \"container\"], [\"pTemplate\", \"caption\"], [1, \"container\", 2, \"margin-top\", \"15px\"], [\"id\", \"nova-ocorrencia\", 3, \"ngSubmit\"], [\"ocorrencia\", \"ngForm\"], [1, \"p-fluid\", \"p-formgrid\", \"p-grid\"], [1, \"p-field\", \"p-col\"], [\"for\", \"localizacaoOcorrencia\"], [\"type\", \"text\", \"name\", \"localizacao\", \"pInputText\", \"\", \"id\", \"localizacao\", \"required\", \"\", \"autofocus\", \"\", \"ngModel\", \"\", \"required\", \"\"], [\"localizacao\", \"ngModel\"], [\"class\", \"p-error\", 4, \"ngIf\"], [\"for\", \"latitudeOcorrencia\"], [\"type\", \"number\", \"name\", \"numProcesso\", \"pInputText\", \"\", \"id\", \"numProcesso\", \"required\", \"\", \"autofocus\", \"\", \"ngModel\", \"\"], [\"for\", \"longitudeOcorrencia\"], [\"type\", \"text\", \"name\", \"motivo\", \"pInputText\", \"\", \"id\", \"motivo\", \"ngModel\", \"\"], [\"for\", \"antenista\"], [\"name\", \"antenista\", \"placeholder\", \"Selecione\", \"ngModel\", \"\", 3, \"options\"], [\"for\", \"escoltaArmada\"], [\"name\", \"escoltaArmado\", \"placeholder\", \"Selecione\", \"ngModel\", \"\", 3, \"options\"], [\"for\", \"estado\"], [\"name\", \"estado\", \"placeholder\", \"Selecione\", \"optionLabel\", \"nome\", \"ngModel\", \"\", 3, \"options\"], [\"defaultLabel\", \"N\\u00E3o\", \"optionLabel\", \"nome\", \"selectedItemsLabel\", \"{0} Prestadores selecionados\", 3, \"options\", \"onChange\"], [\"for\", \"email\"], [\"name\", \"observacoes\", \"pInputTextarea\", \"\", \"ngModel\", \"\", 3, \"rows\", \"cols\"], [1, \"p-fluid\", \"p-formgrid\", \"p-grid\", \"p-jc-end\"], [1, \"p-field\", \"p-col-2\"], [\"pButton\", \"\", \"pRipple\", \"\", \"label\", \"Salvar\", \"icon\", \"pi pi-check\", 1, \"p-button-success\", 3, \"disabled\"], [\"position\", \"top-right\"], [1, \"p-d-flex\", \"p-ai-center\", \"p-jc-between\"], [1, \"p-m-0\"], [1, \"p-error\"]],\n    template: function NovaOcorrenciaComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r4 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"p-table\");\n        i0.ɵɵtemplate(2, NovaOcorrenciaComponent_ng_template_2_Template, 3, 0, \"ng-template\", 1);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(3, \"div\", 2)(4, \"form\", 3, 4);\n        i0.ɵɵlistener(\"ngSubmit\", function NovaOcorrenciaComponent_Template_form_ngSubmit_4_listener() {\n          i0.ɵɵrestoreView(_r4);\n          const _r1 = i0.ɵɵreference(5);\n          return i0.ɵɵresetView(ctx.salvar(_r1));\n        });\n        i0.ɵɵelementStart(6, \"div\", 5)(7, \"div\", 6)(8, \"label\", 7);\n        i0.ɵɵtext(9, \"Latitude, Longitude da ocorr\\u00EAncia\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(10, \"input\", 8, 9);\n        i0.ɵɵtemplate(12, NovaOcorrenciaComponent_small_12_Template, 2, 0, \"small\", 10);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(13, \"div\", 5)(14, \"div\", 6)(15, \"label\", 11);\n        i0.ɵɵtext(16, \"Processo\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(17, \"input\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"div\", 6)(19, \"label\", 13);\n        i0.ɵɵtext(20, \"Motivo\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(21, \"input\", 14);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(22, \"div\", 5)(23, \"div\", 6)(24, \"label\", 15);\n        i0.ɵɵtext(25, \"Antenista\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(26, \"p-dropdown\", 16);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(27, \"div\", 6)(28, \"label\", 17);\n        i0.ɵɵtext(29, \"Escolta Armada\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(30, \"p-dropdown\", 18);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(31, \"div\", 5)(32, \"div\", 6)(33, \"label\", 19);\n        i0.ɵɵtext(34, \"Estado da ocorrencia\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(35, \"p-dropdown\", 20);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(36, \"div\", 6)(37, \"label\", 17);\n        i0.ɵɵtext(38, \"Encaminhar para prestadores\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(39, \"p-multiSelect\", 21);\n        i0.ɵɵlistener(\"onChange\", function NovaOcorrenciaComponent_Template_p_multiSelect_onChange_39_listener($event) {\n          return ctx.prestadoresChange($event);\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(40, \"div\", 5)(41, \"div\", 6)(42, \"label\", 22);\n        i0.ɵɵtext(43, \"Observa\\u00E7\\u00F5es\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(44, \"textarea\", 23);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(45, \"div\", 24)(46, \"div\", 25);\n        i0.ɵɵelement(47, \"button\", 26);\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelement(48, \"p-toast\", 27);\n      }\n      if (rf & 2) {\n        const _r1 = i0.ɵɵreference(5);\n        const _r2 = i0.ɵɵreference(11);\n        i0.ɵɵadvance(12);\n        i0.ɵɵproperty(\"ngIf\", _r2.hasError(\"required\") && _r2.dirty);\n        i0.ɵɵadvance(14);\n        i0.ɵɵproperty(\"options\", ctx.itens);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"options\", ctx.itens);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"options\", ctx.estados);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"options\", ctx.prestadores);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"rows\", 5)(\"cols\", 30);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"disabled\", !_r1.valid);\n      }\n    },\n    dependencies: [i1.PrimeTemplate, i8.ButtonDirective, i9.NgIf, i10.Toast, i11.ɵNgNoValidate, i11.DefaultValueAccessor, i11.NumberValueAccessor, i11.NgControlStatus, i11.NgControlStatusGroup, i11.RequiredValidator, i11.NgModel, i11.NgForm, i12.InputText, i13.InputTextarea, i14.Dropdown, i15.Table, i16.MultiSelect],\n    encapsulation: 2\n  });\n  return NovaOcorrenciaComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}