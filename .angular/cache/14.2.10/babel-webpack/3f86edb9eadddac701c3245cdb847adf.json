{"ast":null,"code":"import { ConfirmationService, MessageService } from 'primeng/api';\nimport { NavigationEnum } from 'src/app/model/enums/navigation.enum';\nimport MessageUtils from 'src/app/utils/message-util';\nimport * as FileSaver from 'file-saver';\nimport { Usuario } from 'src/app/model/vo/usuario';\nimport { Tenancy } from 'src/app/model/vo/tenancy';\nimport { Permissao } from 'src/app/utils/permissao.enum';\nimport { DialogService } from 'primeng/dynamicdialog';\nimport { DeleteOcorrenciaComponent } from '../deletar/deletar-ocorrencia.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"primeng/api\";\nimport * as i2 from \"src/app/services/ocorrencias/ocorrencia-service\";\nimport * as i3 from \"src/app/services/commons/common.service\";\nimport * as i4 from \"src/app/services/auth/auth.service\";\nimport * as i5 from \"primeng/dynamicdialog\";\nimport * as i6 from \"primeng/button\";\nimport * as i7 from \"@angular/common\";\nimport * as i8 from \"primeng/toast\";\nimport * as i9 from \"primeng/confirmdialog\";\nimport * as i10 from \"@angular/forms\";\nimport * as i11 from \"primeng/dropdown\";\nimport * as i12 from \"primeng/table\";\nfunction OcorrenciasComponent_ng_template_2_p_dropdown_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"p-dropdown\", 13);\n    i0.ɵɵlistener(\"ngModelChange\", function OcorrenciasComponent_ng_template_2_p_dropdown_3_Template_p_dropdown_ngModelChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r6.tipoCadastroSelecionado = $event);\n    })(\"onChange\", function OcorrenciasComponent_ng_template_2_p_dropdown_3_Template_p_dropdown_onChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r8 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r8.tipoCadastroChange($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"options\", ctx_r5.tipoCadastro)(\"ngModel\", ctx_r5.tipoCadastroSelecionado);\n  }\n}\nfunction OcorrenciasComponent_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 7)(1, \"h5\", 8);\n    i0.ɵɵtext(2, \"Lista de ocorr\\u00EAncias\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, OcorrenciasComponent_ng_template_2_p_dropdown_3_Template, 1, 2, \"p-dropdown\", 9);\n    i0.ɵɵelementStart(4, \"span\", 10)(5, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function OcorrenciasComponent_ng_template_2_Template_button_click_5_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.novaOcorrencia());\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"button\", 12);\n    i0.ɵɵlistener(\"click\", function OcorrenciasComponent_ng_template_2_Template_button_click_6_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.exportExcel());\n    });\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.admOcorrencia);\n  }\n}\nfunction OcorrenciasComponent_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"th\", 14);\n    i0.ɵɵtext(2, \"ID\");\n    i0.ɵɵelement(3, \"p-sortIcon\", 15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"th\", 16);\n    i0.ɵɵtext(5, \"N\\u00BA Processo \");\n    i0.ɵɵelement(6, \"p-sortIcon\", 17);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"th\", 18);\n    i0.ɵɵtext(8, \"Status \");\n    i0.ɵɵelement(9, \"p-sortIcon\", 19);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"th\", 18);\n    i0.ɵɵtext(11, \"Abertura \");\n    i0.ɵɵelement(12, \"p-sortIcon\", 20);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"th\", 21);\n    i0.ɵɵtext(14, \"A\\u00E7\\u00F5es\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction OcorrenciasComponent_4_ng_template_0_button_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 25);\n    i0.ɵɵlistener(\"click\", function OcorrenciasComponent_4_ng_template_0_button_12_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r17);\n      const ocorrencia_r13 = i0.ɵɵnextContext().$implicit;\n      const ctx_r15 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r15.deletar(ocorrencia_r13));\n    });\n    i0.ɵɵelementEnd();\n  }\n}\nfunction OcorrenciasComponent_4_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r19 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\", 21);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\", 21);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\", 21);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\", 21);\n    i0.ɵɵtext(8);\n    i0.ɵɵpipe(9, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"td\", 21)(11, \"button\", 23);\n    i0.ɵɵlistener(\"click\", function OcorrenciasComponent_4_ng_template_0_Template_button_click_11_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r19);\n      const ocorrencia_r13 = restoredCtx.$implicit;\n      const ctx_r18 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r18.visualizar(ocorrencia_r13));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(12, OcorrenciasComponent_4_ng_template_0_button_12_Template, 1, 0, \"button\", 24);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ocorrencia_r13 = ctx.$implicit;\n    const ctx_r12 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ocorrencia_r13.idCentral);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ocorrencia_r13.numeroProcesso);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ocorrencia_r13.status);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(9, 5, ocorrencia_r13.dataAbertura, \"dd/MM/yyyy HH:mm\"));\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", ctx_r12.admOcorrencia);\n  }\n}\nfunction OcorrenciasComponent_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, OcorrenciasComponent_4_ng_template_0_Template, 13, 8, \"ng-template\", 22);\n  }\n}\nfunction OcorrenciasComponent_p_table_5_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7)(1, \"h6\", 8);\n    i0.ɵɵtext(2, \"Voc\\u00EA ainda n\\u00E3o possui ocorr\\u00EAncias\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction OcorrenciasComponent_p_table_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p-table\");\n    i0.ɵɵtemplate(1, OcorrenciasComponent_p_table_5_ng_template_1_Template, 3, 0, \"ng-template\", 2);\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c0 = function () {\n  return {\n    width: \"50vw\"\n  };\n};\nexport let OcorrenciasComponent = /*#__PURE__*/(() => {\n  class OcorrenciasComponent {\n    constructor(messageService, ocorrenciaService, commomService, authService, confirmationService, dialogService) {\n      this.messageService = messageService;\n      this.ocorrenciaService = ocorrenciaService;\n      this.commomService = commomService;\n      this.authService = authService;\n      this.confirmationService = confirmationService;\n      this.dialogService = dialogService;\n      this.dialog = false;\n      this.ocorrencia = {};\n      this.ocorrencias = [];\n      this.todasOcorrencias = [];\n      this.loading = true;\n      this.usuarioLogado = new Usuario();\n      this.error404 = false;\n      this.position = \"top\";\n      this.admOcorrencia = false;\n      this.tipoCadastroSelecionado = 1;\n      this.tipoCadastro = [{}];\n    }\n    ngOnInit() {\n      this.tipoCadastro = [{\n        label: \"Ocorrencias ativas\",\n        value: 1\n      }, {\n        label: \"Ocorrencias deletadas\",\n        value: 2\n      }];\n      if (this.authService.jwtIsLoad()) {\n        this.loadUsuarioLogado();\n      }\n      this.validaAdmOcorrencia();\n      this.listarOcorrencias();\n    }\n    novaOcorrencia() {\n      this.commomService.navigate(NavigationEnum.NOVA_OCORRENCIA);\n    }\n    listarOcorrencias() {\n      let idTenancy = this.usuarioLogado.tenancy?.id;\n      if (this.usuarioLogado.tipo.id == 2) {\n        this.ocorrenciaService.readByCliente(idTenancy).subscribe(response => {\n          this.todasOcorrencias = response;\n          this.ordenarOcorrenciasAtivas();\n          this.loading = false;\n        }, error => {\n          if (error.includes('404')) {\n            this.messageService.add(MessageUtils.onErrorMessage(\"Cliente não possui Ocorrências\"));\n            this.error404 = true;\n            this.loading = false;\n          }\n        });\n      } else {\n        this.ocorrenciaService.read().subscribe(response => {\n          console.log(\"OCORRENCIAS - \", response);\n          this.todasOcorrencias = response;\n          this.ordenarOcorrenciasAtivas();\n          this.loading = false;\n        }, error => {\n          if (error.includes('404')) {\n            this.messageService.add(MessageUtils.onErrorMessage(\"Cliente não possui Ocorrências\"));\n            this.error404 = true;\n            this.loading = false;\n          }\n        });\n      }\n    }\n    ordenarOcorrenciasAtivas() {\n      let oco = [];\n      this.todasOcorrencias.forEach(a => {\n        if (a.visivel) {\n          oco.push(a);\n        }\n      });\n      this.ocorrencias = oco;\n    }\n    ordenarOcorrenciasInativas() {\n      let oco = [];\n      this.todasOcorrencias.forEach(a => {\n        if (!a.visivel) {\n          oco.push(a);\n        }\n      });\n      this.ocorrencias = oco;\n    }\n    visualizar(ocorrencia) {\n      this.ocorrencia = ocorrencia;\n      console.log(ocorrencia);\n      let id = this.ocorrencia.id;\n      console.log(\"VISUALIZAR - \" + id);\n      this.commomService.navigateWithParams(NavigationEnum.VISUALIZAR_OCORRENCIA, id);\n    }\n    deletar(ocorrencia) {\n      this.confirmationService.confirm({\n        message: 'Tem certeza que deseja remover a ocorrência ' + ocorrencia.idCentral + ' ?',\n        header: 'Confirmação',\n        icon: 'pi pi-info-circle',\n        accept: () => {\n          const ref = this.dialogService.open(DeleteOcorrenciaComponent, {\n            data: {\n              idOcorrencia: ocorrencia.id\n            },\n            header: 'Senha administrador',\n            width: '15%'\n          });\n        },\n        key: \"positionDialog\"\n      });\n    }\n    removerOcorrencia(ocorrencia) {\n      this.ocorrenciaService.delete(ocorrencia.id).subscribe(response => {\n        this.messageService.add(MessageUtils.onSuccessMessage(\"Ocorrencia excluida com sucesso\"));\n      }, error => {\n        this.messageService.add(MessageUtils.onErrorMessage(\"Erro ao excluir ocorrencia\"));\n      });\n    }\n    exportExcel() {\n      import(\"xlsx\").then(xlsx => {\n        const worksheet = xlsx.utils.json_to_sheet(this.ocorrencias);\n        const workbook = {\n          Sheets: {\n            'data': worksheet\n          },\n          SheetNames: ['data']\n        };\n        const excelBuffer = xlsx.write(workbook, {\n          bookType: 'xlsx',\n          type: 'array'\n        });\n        this.saveAsExcelFile(excelBuffer, \"ocorrencias\");\n      });\n    }\n    saveAsExcelFile(buffer, fileName) {\n      let EXCEL_TYPE = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\n      let EXCEL_EXTENSION = '.xlsx';\n      const data = new Blob([buffer], {\n        type: EXCEL_TYPE\n      });\n      FileSaver.saveAs(data, fileName + '_export_' + new Date().getTime() + EXCEL_EXTENSION);\n    }\n    loadUsuarioLogado() {\n      if (this.authService.jwtIsLoad()) {\n        let idTenancy = this.authService.getUsuarioLogado().id_tenancy;\n        this.usuarioLogado.id = this.authService.getUsuarioLogado().id_usuario;\n        this.usuarioLogado.tipo = this.authService.getUsuarioLogado().tipo_tenancy;\n        this.usuarioLogado.tenancy = new Tenancy(idTenancy);\n        console.log(\"USUARIO LOGADO - \", this.authService.getUsuarioLogado());\n      }\n    }\n    reload() {\n      this.commomService.reloadComponent();\n    }\n    validaAdmOcorrencia() {\n      const tipoId = this.authService.getUsuarioLogado().tipo_tenancy.id;\n      const role = this.authService.getUsuarioLogado().authorities;\n      if (tipoId === 0 || tipoId === 1) {\n        role.forEach(a => {\n          if (a === Permissao.DELETE) {\n            this.admOcorrencia = true;\n          }\n        });\n      } else this.admOcorrencia = false;\n    }\n    tipoCadastroChange(event) {\n      this.tipoCadastroSelecionado = event.value;\n      if (this.tipoCadastroSelecionado == 1) {\n        this.ordenarOcorrenciasAtivas();\n      } else if (this.tipoCadastroSelecionado == 2) {\n        this.ordenarOcorrenciasInativas();\n      }\n    }\n  }\n  OcorrenciasComponent.ɵfac = function OcorrenciasComponent_Factory(t) {\n    return new (t || OcorrenciasComponent)(i0.ɵɵdirectiveInject(i1.MessageService), i0.ɵɵdirectiveInject(i2.OcorrenciaService), i0.ɵɵdirectiveInject(i3.CommomService), i0.ɵɵdirectiveInject(i4.AuthService), i0.ɵɵdirectiveInject(i1.ConfirmationService), i0.ɵɵdirectiveInject(i5.DialogService));\n  };\n  OcorrenciasComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: OcorrenciasComponent,\n    selectors: [[\"app-ocorrencias\"]],\n    features: [i0.ɵɵProvidersFeature([MessageService, ConfirmationService, DialogService])],\n    decls: 8,\n    vars: 12,\n    consts: [[\"dataKey\", \"id\", 3, \"value\", \"rows\", \"paginator\", \"rowHover\", \"loading\"], [\"dt\", \"\"], [\"pTemplate\", \"caption\"], [\"pTemplate\", \"header\"], [4, \"ngIf\"], [\"key\", \"positionDialog\", \"acceptLabel\", \"SIM\", \"acceptButtonStyleClass\", \"p-button-success\", \"rejectLabel\", \"N\\u00C3O\", \"rejectButtonStyleClass\", \"p-button-danger\", 3, \"position\", \"baseZIndex\"], [\"position\", \"top-right\", 3, \"onClose\"], [1, \"p-d-flex\", \"p-ai-center\", \"p-jc-between\"], [1, \"p-m-0\"], [\"name\", \"tipoCadastro\", \"placeholder\", \"Selecione\", 3, \"options\", \"ngModel\", \"ngModelChange\", \"onChange\", 4, \"ngIf\"], [1, \"p-input-icon-left\"], [\"pButton\", \"\", \"pRipple\", \"\", \"label\", \"Novo\", \"icon\", \"pi pi-plus\", 1, \"p-button-success\", \"p-mr-2\", 3, \"click\"], [\"type\", \"button\", \"pButton\", \"\", \"pRipple\", \"\", \"icon\", \"pi pi-file-excel\", \"pTooltip\", \"XLS\", \"tooltipPosition\", \"bottom\", 1, \"p-button-success\", \"p-mr-2\", 3, \"click\"], [\"name\", \"tipoCadastro\", \"placeholder\", \"Selecione\", 3, \"options\", \"ngModel\", \"ngModelChange\", \"onChange\"], [\"pSortableColumn\", \"id\", 2, \"text-align\", \"center\"], [\"field\", \"id\"], [\"pSortableColumn\", \"status\", 2, \"text-align\", \"center\"], [\"field\", \"processo\"], [\"pSortableColumn\", \"nome\", 2, \"text-align\", \"center\"], [\"field\", \"status\"], [\"field\", \"abertura\"], [2, \"text-align\", \"center\"], [\"pTemplate\", \"body\"], [\"pButton\", \"\", \"pRipple\", \"\", \"icon\", \"pi pi-search\", 1, \"p-button-rounded\", \"p-button-success\", \"p-mr-2\", 3, \"click\"], [\"pButton\", \"\", \"pRipple\", \"\", \"icon\", \"pi pi-times\", \"class\", \"p-button-rounded p-button-danger\", 3, \"click\", 4, \"ngIf\"], [\"pButton\", \"\", \"pRipple\", \"\", \"icon\", \"pi pi-times\", 1, \"p-button-rounded\", \"p-button-danger\", 3, \"click\"]],\n    template: function OcorrenciasComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p-table\", 0, 1);\n        i0.ɵɵtemplate(2, OcorrenciasComponent_ng_template_2_Template, 7, 1, \"ng-template\", 2);\n        i0.ɵɵtemplate(3, OcorrenciasComponent_ng_template_3_Template, 15, 0, \"ng-template\", 3);\n        i0.ɵɵtemplate(4, OcorrenciasComponent_4_Template, 1, 0, null, 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(5, OcorrenciasComponent_p_table_5_Template, 2, 0, \"p-table\", 4);\n        i0.ɵɵelement(6, \"p-confirmDialog\", 5);\n        i0.ɵɵelementStart(7, \"p-toast\", 6);\n        i0.ɵɵlistener(\"onClose\", function OcorrenciasComponent_Template_p_toast_onClose_7_listener() {\n          return ctx.reload();\n        });\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"value\", ctx.ocorrencias)(\"rows\", 10)(\"paginator\", ctx.ocorrencias.length > 0)(\"rowHover\", true)(\"loading\", ctx.loading);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", !ctx.ocorrencias.length);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.error404);\n        i0.ɵɵadvance(1);\n        i0.ɵɵstyleMap(i0.ɵɵpureFunction0(11, _c0));\n        i0.ɵɵproperty(\"position\", ctx.position)(\"baseZIndex\", 10000);\n      }\n    },\n    dependencies: [i1.PrimeTemplate, i6.ButtonDirective, i7.NgIf, i8.Toast, i9.ConfirmDialog, i10.NgControlStatus, i10.NgModel, i11.Dropdown, i12.Table, i12.SortableColumn, i12.SortIcon, i7.DatePipe],\n    encapsulation: 2\n  });\n  return OcorrenciasComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}