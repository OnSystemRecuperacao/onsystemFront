{"ast":null,"code":"import { MessageService } from 'primeng/api';\nimport { NavigationEnum } from 'src/app/model/enums/navigation.enum';\nimport MessageUtils from 'src/app/utils/message-util';\nimport { NgForm } from '@angular/forms';\nimport { getDatabase, push, ref } from 'firebase/database';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"primeng/api\";\nimport * as i2 from \"src/app/services/commons/common.service\";\nimport * as i3 from \"primeng/dynamicdialog\";\nimport * as i4 from \"src/app/services/ocorrencias/ocorrencia-service\";\nimport * as i5 from \"src/app/services/auth/auth.service\";\nimport * as i6 from \"primeng/button\";\nimport * as i7 from \"primeng/toast\";\nimport * as i8 from \"@angular/forms\";\nimport * as i9 from \"primeng/inputtextarea\";\nexport let EncerrarOcorrenciaComponent = /*#__PURE__*/(() => {\n  class EncerrarOcorrenciaComponent {\n    constructor(messageService, commomService, dialogService, ref, config, ocorrenciaService, authService) {\n      this.messageService = messageService;\n      this.commomService = commomService;\n      this.dialogService = dialogService;\n      this.ref = ref;\n      this.config = config;\n      this.ocorrenciaService = ocorrenciaService;\n      this.authService = authService;\n      this.dialog = false;\n      this.prestador = {};\n      this.prestadores = [];\n      this.tempoPrestadorOcorrencia = {};\n      this.tempoPrestadorOcorrencias = [];\n      this.ocorrencia = {};\n      this.notificacao = {};\n      this.pre = {};\n      this.loading = true;\n      this.idBancoFirebase = \"\";\n      this.user = {\n        _id: 0,\n        tipoTenancy: 0,\n        name: '',\n        avatar: \"https://firebasestorage.googleapis.com/v0/b/onsystemapp-38e3c.appspot.com/o/logo.png?alt=media&token=d4969140-f893-4ce1-b877-f60b4458a291\"\n      };\n    }\n    ngOnInit() {\n      console.log(this.config.data.idOcorrencia);\n      this.idBancoFirebase = this.config.data.idFirebase;\n    }\n    salvar(form) {\n      let obs = form.value.observacao;\n      let ocorrencia = this.config.data.idOcorrencia;\n      this.ocorrenciaService.encerrarOcorrencia(obs, ocorrencia).then(response => {\n        this.enviarMensagem(obs);\n        setTimeout(() => {\n          this.messageService.add(MessageUtils.onSuccessMessage(\"Ocorrencia encerrada\"));\n          this.ref.close();\n          this.commomService.navigateByUrl(NavigationEnum.LISTAR_OCORRENCIAS);\n        }, 1000);\n      }).catch(error => this.messageService.add(MessageUtils.onErrorMessage(error)));\n    }\n    redirectToList(event) {\n      this.commomService.navigateByUrl(NavigationEnum.LISTAR_OCORRENCIAS);\n    }\n    enviarMensagem(obs) {\n      console.log(\"Enviando msg - \", this.idBancoFirebase);\n      this.user = {\n        _id: this.authService.getUsuarioLogado().id_tenancy,\n        tipoTenancy: this.authService.getUsuarioLogado()[\"tipo_tenancy\"].id,\n        name: this.authService.getUsuarioLogado()[\"nome_usuario\"],\n        avatar: \"https://firebasestorage.googleapis.com/v0/b/onsystemapp-38e3c.appspot.com/o/logo.png?alt=media&token=d4969140-f893-4ce1-b877-f60b4458a291\"\n      };\n      const db = getDatabase();\n      push(ref(db, this.idBancoFirebase), {\n        text: \"Ocorrencia encerrada pelo cliente: Considerações finais - \" + obs,\n        image: \"\",\n        user: this.user,\n        createdAt: new Date().getTime()\n      });\n    }\n  }\n  EncerrarOcorrenciaComponent.ɵfac = function EncerrarOcorrenciaComponent_Factory(t) {\n    return new (t || EncerrarOcorrenciaComponent)(i0.ɵɵdirectiveInject(i1.MessageService), i0.ɵɵdirectiveInject(i2.CommomService), i0.ɵɵdirectiveInject(i3.DialogService), i0.ɵɵdirectiveInject(i3.DynamicDialogRef), i0.ɵɵdirectiveInject(i3.DynamicDialogConfig), i0.ɵɵdirectiveInject(i4.OcorrenciaService), i0.ɵɵdirectiveInject(i5.AuthService));\n  };\n  EncerrarOcorrenciaComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: EncerrarOcorrenciaComponent,\n    selectors: [[\"app-ocorrencias\"]],\n    features: [i0.ɵɵProvidersFeature([MessageService])],\n    decls: 12,\n    vars: 2,\n    consts: [[1, \"container\", 2, \"margin-top\", \"15px\"], [\"id\", \"obs\"], [\"obs\", \"ngForm\"], [1, \"p-fluid\", \"p-formgrid\", \"p-grid\"], [1, \"p-field\", \"p-col\"], [\"for\", \"observacao\"], [\"name\", \"observacao\", \"pInputTextarea\", \"\", \"ngModel\", \"\", \"required\", \"\", 3, \"rows\", \"cols\"], [1, \"p-fluid\", \"p-formgrid\", \"p-grid\", \"p-jc-end\"], [1, \"p-field\", \"p-col-2\"], [\"pButton\", \"\", \"pRipple\", \"\", \"label\", \"Salvar\", \"icon\", \"pi pi-check\", 1, \"p-button-success\", 3, \"click\"], [\"position\", \"top-right\", 3, \"onClose\"]],\n    template: function EncerrarOcorrenciaComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r1 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1, 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"label\", 5);\n        i0.ɵɵtext(6, \"Observa\\u00E7\\u00E3o\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(7, \"textarea\", 6);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(8, \"div\", 7)(9, \"div\", 8)(10, \"button\", 9);\n        i0.ɵɵlistener(\"click\", function EncerrarOcorrenciaComponent_Template_button_click_10_listener() {\n          i0.ɵɵrestoreView(_r1);\n          const _r0 = i0.ɵɵreference(2);\n          return i0.ɵɵresetView(ctx.salvar(_r0));\n        });\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelementStart(11, \"p-toast\", 10);\n        i0.ɵɵlistener(\"onClose\", function EncerrarOcorrenciaComponent_Template_p_toast_onClose_11_listener($event) {\n          return ctx.redirectToList($event);\n        });\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"rows\", 5)(\"cols\", 30);\n      }\n    },\n    dependencies: [i6.ButtonDirective, i7.Toast, i8.ɵNgNoValidate, i8.DefaultValueAccessor, i8.NgControlStatus, i8.NgControlStatusGroup, i8.RequiredValidator, i8.NgModel, i8.NgForm, i9.InputTextarea],\n    encapsulation: 2\n  });\n  return EncerrarOcorrenciaComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}