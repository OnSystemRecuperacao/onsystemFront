{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { throwError } from 'rxjs';\nimport Utils from 'src/app/utils/utils';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let LocalizacaoPrestadorService = /*#__PURE__*/(() => {\n  class LocalizacaoPrestadorService {\n    constructor(httpClient) {\n      this.httpClient = httpClient;\n      this.BASE_URL = Utils.makeURLRequest(\"/localizacaoPrestador\");\n      this.data = {};\n      this.loc = {};\n      // Headers\n      this.httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json'\n        })\n      };\n    }\n    buscarPrestadorLocalizacao(dados) {\n      const url = `${this.BASE_URL}` + '/buscarPrestadorLocalizacao';\n      return this.httpClient.post(url, dados, this.httpOptions).toPromise();\n    }\n    parseData(prestador) {\n      let data = prestador;\n      return data;\n    }\n    // Manipulação de erros\n    handleError(error) {\n      let errorMessage = '';\n      if (error.error instanceof ErrorEvent) {\n        errorMessage = error.error.message;\n      } else {\n        errorMessage = error.message;\n      }\n      return throwError(errorMessage);\n    }\n  }\n  LocalizacaoPrestadorService.ɵfac = function LocalizacaoPrestadorService_Factory(t) {\n    return new (t || LocalizacaoPrestadorService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  LocalizacaoPrestadorService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: LocalizacaoPrestadorService,\n    factory: LocalizacaoPrestadorService.ɵfac,\n    providedIn: 'root'\n  });\n  return LocalizacaoPrestadorService;\n})();","map":null,"metadata":{},"sourceType":"module"}