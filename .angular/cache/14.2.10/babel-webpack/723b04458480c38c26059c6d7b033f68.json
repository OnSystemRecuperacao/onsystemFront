{"ast":null,"code":"import { ConfirmationService, MessageService } from \"primeng/api\";\nimport { DialogService } from \"primeng/dynamicdialog\";\nimport MessageUtils from \"src/app/utils/message-util\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"primeng/api\";\nimport * as i2 from \"src/app/services/ocorrencias/ocorrencia-service\";\nimport * as i3 from \"src/app/services/usuario/usuario-service\";\nimport * as i4 from \"src/app/services/auth/auth.service\";\nimport * as i5 from \"primeng/dynamicdialog\";\nimport * as i6 from \"primeng/button\";\nimport * as i7 from \"@angular/common\";\nimport * as i8 from \"primeng/toast\";\nimport * as i9 from \"@angular/forms\";\nimport * as i10 from \"primeng/inputtext\";\nimport * as i11 from \"primeng/divider\";\nfunction DeleteOcorrenciaComponent_small_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 12);\n    i0.ɵɵtext(1, \"* O campo Senha \\u00E9 obrigat\\u00F3rio.\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport let DeleteOcorrenciaComponent = /*#__PURE__*/(() => {\n  class DeleteOcorrenciaComponent {\n    constructor(messageService, ocorrenciaService, confirmationService, usuarioService, authService, config, dialogService) {\n      this.messageService = messageService;\n      this.ocorrenciaService = ocorrenciaService;\n      this.confirmationService = confirmationService;\n      this.usuarioService = usuarioService;\n      this.authService = authService;\n      this.config = config;\n      this.dialogService = dialogService;\n    }\n    ngOnInit() {}\n    submit(form) {\n      let login = {\n        loginUsuario: this.authService.getUsuarioLogado().user_name,\n        senhaUsuario: form.value.password\n      };\n      this.usuarioService.validaSenhaAdm(login).then(response => {\n        this.removerOcorrencia(this.config.data.idOcorrencia);\n      }).catch(error => {\n        console.log(error);\n        this.messageService.add(MessageUtils.onErrorMessage(\"Senha invalida\"));\n      });\n    }\n    removerOcorrencia(id) {\n      this.ocorrenciaService.delete(id).subscribe(response => {\n        this.messageService.add(MessageUtils.onSuccessMessage(\"Ocorrencia excluida com sucesso\"));\n        window.location.reload();\n      }, error => {\n        this.messageService.add(MessageUtils.onErrorMessage(\"Erro ao excluir ocorrencia\"));\n      });\n    }\n  }\n  DeleteOcorrenciaComponent.ɵfac = function DeleteOcorrenciaComponent_Factory(t) {\n    return new (t || DeleteOcorrenciaComponent)(i0.ɵɵdirectiveInject(i1.MessageService), i0.ɵɵdirectiveInject(i2.OcorrenciaService), i0.ɵɵdirectiveInject(i1.ConfirmationService), i0.ɵɵdirectiveInject(i3.UsuarioService), i0.ɵɵdirectiveInject(i4.AuthService), i0.ɵɵdirectiveInject(i5.DynamicDialogConfig), i0.ɵɵdirectiveInject(i5.DialogService));\n  };\n  DeleteOcorrenciaComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DeleteOcorrenciaComponent,\n    selectors: [[\"ng-component\"]],\n    features: [i0.ɵɵProvidersFeature([MessageService, ConfirmationService, DialogService])],\n    decls: 16,\n    vars: 1,\n    consts: [[\"id\", \"reset-senha\", \"autocomplete\", \"off\", 3, \"ngSubmit\"], [\"deleteSenha\", \"ngForm\"], [1, \"p-col-12\", \"p-d-flex-12\", \"p-ai-center\", \"p-jc-center\"], [1, \"p-field\"], [1, \"p-inputgroup\"], [1, \"p-inputgroup-addon\"], [1, \"pi\", \"pi-ellipsis-h\"], [\"type\", \"password\", \"pInputText\", \"\", \"ngModel\", \"\", \"name\", \"password\", \"placeholder\", \"Senha\", \"required\", \"\"], [\"password\", \"ngModel\"], [\"class\", \"p-error\", 4, \"ngIf\"], [\"pButton\", \"\", \"pRipple\", \"\", \"label\", \"Enviar\", 1, \"p-button-success\"], [\"position\", \"top-center\"], [1, \"p-error\"]],\n    template: function DeleteOcorrenciaComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r3 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"form\", 0, 1);\n        i0.ɵɵlistener(\"ngSubmit\", function DeleteOcorrenciaComponent_Template_form_ngSubmit_0_listener() {\n          i0.ɵɵrestoreView(_r3);\n          const _r0 = i0.ɵɵreference(1);\n          return i0.ɵɵresetView(ctx.submit(_r0));\n        });\n        i0.ɵɵelementStart(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 3)(5, \"div\", 4)(6, \"span\", 5);\n        i0.ɵɵelement(7, \"i\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"input\", 7, 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"div\", 4);\n        i0.ɵɵtemplate(11, DeleteOcorrenciaComponent_small_11_Template, 2, 0, \"small\", 9);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(12, \"p-divider\");\n        i0.ɵɵelementStart(13, \"div\", 3);\n        i0.ɵɵelement(14, \"button\", 10);\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelement(15, \"p-toast\", 11);\n      }\n      if (rf & 2) {\n        const _r1 = i0.ɵɵreference(9);\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"ngIf\", _r1.hasError(\"required\") && _r1.dirty);\n      }\n    },\n    dependencies: [i6.ButtonDirective, i7.NgIf, i8.Toast, i9.ɵNgNoValidate, i9.DefaultValueAccessor, i9.NgControlStatus, i9.NgControlStatusGroup, i9.RequiredValidator, i9.NgModel, i9.NgForm, i10.InputText, i11.Divider],\n    encapsulation: 2\n  });\n  return DeleteOcorrenciaComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}