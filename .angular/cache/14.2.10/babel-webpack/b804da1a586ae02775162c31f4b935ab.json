{"ast":null,"code":"import { HttpHeaders } from \"@angular/common/http\";\nimport { throwError } from \"rxjs\";\nimport { catchError, retry } from \"rxjs/operators\";\nimport Utils from \"src/app/utils/utils\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let RelatorioService = /*#__PURE__*/(() => {\n  class RelatorioService {\n    constructor(httpClient) {\n      this.httpClient = httpClient;\n      this.BASE_URL = Utils.makeURLRequest(\"/historico\");\n      this.data = {};\n      // Headers\n      this.httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json'\n        })\n      };\n    }\n    read(id) {\n      let url = this.BASE_URL + '/' + id;\n      return this.httpClient.get(url).pipe(retry(2), catchError(this.handleError));\n    }\n    // Manipulação de erros\n    handleError(error) {\n      let errorMessage = '';\n      if (error.error instanceof ErrorEvent) {\n        errorMessage = error.error.message;\n      } else {\n        errorMessage = error.message;\n      }\n      return throwError(errorMessage);\n    }\n  }\n  RelatorioService.ɵfac = function RelatorioService_Factory(t) {\n    return new (t || RelatorioService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  RelatorioService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: RelatorioService,\n    factory: RelatorioService.ɵfac,\n    providedIn: 'root'\n  });\n  return RelatorioService;\n})();","map":null,"metadata":{},"sourceType":"module"}